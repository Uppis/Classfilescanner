package com.vajasoft.classfilescanner;

import com.vajasoft.classfile.ClassFile;
import com.vajasoft.classfile.NameAndType;
import com.vajasoft.classfile.Reference;
import com.vajasoft.wizard.Wizard;
import com.vajasoft.wizard.WizardCard;
import java.util.*;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.logging.Logger;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author  z705692
 */
public class WizCardMembers extends javax.swing.JPanel implements WizardCard {

    private static final Logger LOGGER = Logger.getLogger(WizCardMembers.class.getPackage().getName());
    private final Wizard<Property> wizard;
    private final MemberTableModel memberListModel;
    private final ClassFilePropertyListener classFilePropListener;

    public WizCardMembers(Wizard<Property> wiz) {
        this.classFilePropListener = new ClassFilePropertyListener();
        this.memberListModel = new MemberTableModel();
        initComponents();
        Util.setListSelectionListeners(lstMembers, cmdNext);
        wizard = wiz;
        wizard.addPropertyChangeListener(Property.CLASS_FILE, classFilePropListener);
    }

    @Override
    public void init() {
        LOGGER.fine("WizCardMembers inited");
    }

    @Override
    public void activate() {
        LOGGER.fine("WizCardMembers activated");
        getRootPane().setDefaultButton(cmdNext);
        lstMembers.requestFocusInWindow();
        wizard.setProperty(Property.REFERENCES, null);
    }

    @Override
    public void passivate() {
        LOGGER.fine("WizCardMembers passivated");
    }

    private class ClassFilePropertyListener implements PropertyChangeListener {
        @Override
        public void propertyChange(PropertyChangeEvent evt) {
            memberListModel.clearData();
            fldMemberOfTheClass.setText("");
            ClassFile cf = (ClassFile) evt.getNewValue();
            if (cf != null) {
                memberListModel.addData(cf.getFields());
                memberListModel.addData(cf.getMethods());
                fldMemberOfTheClass.setText(cf.getClassNameInternal());
            }
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblMemberOfTheClass = new javax.swing.JLabel();
        fldMemberOfTheClass = new javax.swing.JLabel();
        lblMemberList = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstMembers = new javax.swing.JTable();
        cmdPrev = new javax.swing.JButton();
        cmdNext = new javax.swing.JButton();

        setName("MEMBER"); // NOI18N

        lblMemberOfTheClass.setText("<html><font style=\"font-size: 14pt; color:maroon; font-weight: bold\">2. What to scan for (cont'd)</font>\n<br>\n<br>\nClass:\n</html>");

        fldMemberOfTheClass.setText("-----");

        lblMemberList.setText("Select member(s) you want to scan references to:");

        lstMembers.setModel(memberListModel);
        lstMembers.setName("focus"); // NOI18N
        lstMembers.setRowSorter(new TableRowSorter(memberListModel));
        jScrollPane2.setViewportView(lstMembers);

        cmdPrev.setMnemonic('p');
        cmdPrev.setText("<< Previous");
        cmdPrev.setMaximumSize(new java.awt.Dimension(98, 23));
        cmdPrev.setMinimumSize(new java.awt.Dimension(98, 23));
        cmdPrev.setPreferredSize(new java.awt.Dimension(98, 23));
        cmdPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPrevActionPerformed(evt);
            }
        });

        cmdNext.setMnemonic('n');
        cmdNext.setText("Next >>");
        cmdNext.setMaximumSize(new java.awt.Dimension(98, 23));
        cmdNext.setMinimumSize(new java.awt.Dimension(98, 23));
        cmdNext.setName("default"); // NOI18N
        cmdNext.setPreferredSize(new java.awt.Dimension(98, 23));
        cmdNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdNextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 496, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(cmdPrev, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmdNext, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblMemberList)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(fldMemberOfTheClass, javax.swing.GroupLayout.DEFAULT_SIZE, 496, Short.MAX_VALUE))
                            .addComponent(lblMemberOfTheClass, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblMemberOfTheClass, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fldMemberOfTheClass)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblMemberList)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmdNext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmdPrev, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cmdNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdNextActionPerformed
        List<Reference> refs = new ArrayList<>();
        if (lstMembers.getSelectedRowCount() > 0) {
            for (int i : lstMembers.getSelectedRows()) {
                NameAndType nt = memberListModel.getData(lstMembers.convertRowIndexToModel(i));
                refs.add(new Reference(fldMemberOfTheClass.getText(), nt.getName(), nt.getDescriptor()));
            }
        } else {
            refs.add(new Reference(fldMemberOfTheClass.getText()));
        }
        wizard.setProperty(Property.REFERENCES, refs);
        wizard.nextPhase();
}//GEN-LAST:event_cmdNextActionPerformed

private void cmdPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPrevActionPerformed
    wizard.previousPhase();
}//GEN-LAST:event_cmdPrevActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmdNext;
    private javax.swing.JButton cmdPrev;
    private javax.swing.JLabel fldMemberOfTheClass;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblMemberList;
    private javax.swing.JLabel lblMemberOfTheClass;
    private javax.swing.JTable lstMembers;
    // End of variables declaration//GEN-END:variables
}
