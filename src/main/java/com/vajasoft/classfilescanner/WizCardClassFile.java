package com.vajasoft.classfilescanner;

import com.vajasoft.classfile.ClassFile;
import com.vajasoft.classfile.Reference;
import com.vajasoft.wizard.Wizard;
import com.vajasoft.wizard.WizardCard;
import java.beans.PropertyChangeEvent;
import java.io.*;
import java.util.*;
import java.util.regex.*;
import javax.swing.*;
import javax.swing.filechooser.FileNameExtensionFilter;

import java.beans.PropertyChangeListener;
import java.util.logging.Logger;

/**
 *
 * @author  z705692
 */
public class WizCardClassFile extends javax.swing.JPanel implements WizardCard, PropertyChangeListener {

    private static final Logger LOGGER = Logger.getLogger(WizCardClassFile.class.getPackage().getName());
    private static final javax.swing.filechooser.FileFilter CLASSFILEFILTER = new FileNameExtensionFilter("Java class file", "class");
    private static final javax.swing.filechooser.FileFilter ARCHIVEFILEFILTER = new FileNameExtensionFilter("Archive file", "zip", "jar");
    private static final Pattern USERINPUTPATTERN = Pattern.compile("\"(.*)\"|(\\S+)");
    private final Wizard<Property> wizard;

    public WizCardClassFile(Wizard<Property> wiz, MutableComboBoxModel recentClasses) {
        initComponents();
        ((JTextField) fldClassFile.getEditor().getEditorComponent()).getDocument().addDocumentListener(new StateGuard(cmdNext));
        ((JTextField) fldClassFile.getEditor().getEditorComponent()).addPropertyChangeListener(this);
        fldClassFile.setModel(recentClasses);
        wizard = wiz;
        classFileChooser.addChoosableFileFilter(ARCHIVEFILEFILTER);
        classFileChooser.addChoosableFileFilter(CLASSFILEFILTER);
    }

    @Override
    public void init() {
        LOGGER.fine("WizCardClassFile inited");
        fldClassFile.setSelectedItem(null);
    }

    @Override
    public void activate() {
        LOGGER.fine("WizCardClassFile activated");
        getRootPane().setDefaultButton(cmdNext);
        fldClassFile.requestFocusInWindow();
        wizard.setProperty(Property.CLASS_FILE, null);
        wizard.setProperty(Property.REFERENCES, null);
    }

    @Override
    public void passivate() {
        LOGGER.fine("WizCardClassFile passivated");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        classFileChooser = new javax.swing.JFileChooser();
        lblClassFile = new javax.swing.JLabel();
        cmdBrowse = new javax.swing.JButton();
        cmdPrev = new javax.swing.JButton();
        cmdNext = new javax.swing.JButton();
        fldClassFile = new javax.swing.JComboBox();

        setName("CLASS"); // NOI18N

        lblClassFile.setText("<html><font style=\"font-size: 14pt; color:maroon; font-weight: bold\">2. What to scan for</font>\n<br>\n<br>\nType the reference (package[.Class] [field] [type])\n<br>\n or browse for a class file or archive to select a reference:\n</html>");
        lblClassFile.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        lblClassFile.setFocusable(false);
        lblClassFile.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        lblClassFile.setMaximumSize(new java.awt.Dimension(551, 36));
        lblClassFile.setPreferredSize(new java.awt.Dimension(551, 36));
        lblClassFile.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        cmdBrowse.setText("Browse...");
        cmdBrowse.setMaximumSize(new java.awt.Dimension(98, 23));
        cmdBrowse.setMinimumSize(new java.awt.Dimension(98, 23));
        cmdBrowse.setPreferredSize(new java.awt.Dimension(98, 23));
        cmdBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdBrowseActionPerformed(evt);
            }
        });

        cmdPrev.setMnemonic('p');
        cmdPrev.setText("<< Previous");
        cmdPrev.setMaximumSize(new java.awt.Dimension(98, 23));
        cmdPrev.setMinimumSize(new java.awt.Dimension(98, 23));
        cmdPrev.setPreferredSize(new java.awt.Dimension(98, 23));
        cmdPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPrevActionPerformed(evt);
            }
        });

        cmdNext.setMnemonic('n');
        cmdNext.setText("Next >>");
        cmdNext.setEnabled(false);
        cmdNext.setMaximumSize(new java.awt.Dimension(98, 23));
        cmdNext.setMinimumSize(new java.awt.Dimension(98, 23));
        cmdNext.setName("default"); // NOI18N
        cmdNext.setPreferredSize(new java.awt.Dimension(98, 23));
        cmdNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdNextActionPerformed(evt);
            }
        });

        fldClassFile.setEditable(true);
        fldClassFile.setName("focus"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblClassFile, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 543, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 341, Short.MAX_VALUE)
                        .addComponent(cmdPrev, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(cmdNext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(fldClassFile, 0, 439, Short.MAX_VALUE)
                        .addGap(6, 6, 6)
                        .addComponent(cmdBrowse, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblClassFile, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fldClassFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmdBrowse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 249, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmdNext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmdPrev, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cmdNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdNextActionPerformed
        String[] parts = Util.split(String.valueOf(fldClassFile.getSelectedItem()), USERINPUTPATTERN);
        File f = new File(parts[0]);
        if (f.exists()) {
            if (f.isDirectory()) {
                cmdBrowseActionPerformed(evt);
            } else if (ARCHIVEFILEFILTER.accept(f)) {
                try {
                    java.util.zip.ZipFile zf = new java.util.zip.ZipFile(f);
                    Util.updateComboList(fldClassFile);
                    wizard.setProperty(com.vajasoft.classfilescanner.Property.ARCHIVE, zf);
                    wizard.nextPhase();
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(this, ex, "Error reading file: " + f, JOptionPane.ERROR_MESSAGE);
                }
            } else {
                try {
                    ClassFile cf = new ClassFile(new FileInputStream(f));
                    Util.updateComboList(fldClassFile);
                    wizard.setProperty(Property.CLASS_FILE, cf);
                    wizard.nextPhase();
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(this, ex, "Error reading file: " + f, JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            Util.updateComboList(fldClassFile);
            wizard.setProperty(Property.REFERENCES, Arrays.asList(new Reference(parts)));
            wizard.nextPhase();
        }
}//GEN-LAST:event_cmdNextActionPerformed

    private void cmdPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPrevActionPerformed
        wizard.previousPhase();
}//GEN-LAST:event_cmdPrevActionPerformed

    private void cmdBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdBrowseActionPerformed
        File tmp = Util.getFileFromUserInput(String.valueOf(fldClassFile.getSelectedItem()));
        if (tmp != null) {
            classFileChooser.setCurrentDirectory(tmp);
        }
        if (classFileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File clFile = classFileChooser.getSelectedFile();
            fldClassFile.setSelectedItem("\"" + clFile.getAbsolutePath() + "\""); // Path may contain spaces
        }
}//GEN-LAST:event_cmdBrowseActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser classFileChooser;
    private javax.swing.JButton cmdBrowse;
    private javax.swing.JButton cmdNext;
    private javax.swing.JButton cmdPrev;
    private javax.swing.JComboBox fldClassFile;
    private javax.swing.JLabel lblClassFile;
    // End of variables declaration//GEN-END:variables

    @Override
    public void propertyChange(PropertyChangeEvent evt) {
    }
}
