/*
 * RootFilePanel.java
 *
 * Created on 8. kes√§kuuta 2007, 15:48
 */
package classfilescanner;

import java.io.*;
import java.util.jar.JarFile;
import java.util.logging.Logger;
import java.util.zip.ZipException;
import javax.swing.*;
import javax.swing.filechooser.FileNameExtensionFilter;

import wizard.*;

/**
 *
 * @author  z705692
 */
public class WizCardRootFile extends javax.swing.JPanel implements WizardCard {
    private static final Logger logger = Logger.getLogger(WizCardRootFile.class.getPackage().getName());
    private static javax.swing.filechooser.FileFilter archiveFileFilter = new FileNameExtensionFilter("Archive file", "zip", "jar", "war", "ear");
    private Wizard<Property> wizard;

    public WizCardRootFile(Wizard<Property> wiz, MutableComboBoxModel recentRoots) {
        initComponents();
        ((JTextField) fldRootDir.getEditor().getEditorComponent()).getDocument().addDocumentListener(new StateGuard(cmdNext));
        fldRootDir.setModel(recentRoots);
        wizard = wiz;
    }

    public void init() {
        logger.fine("WizCardRootFile inited");
        fldRootDir.setSelectedItem(null);
    }

    public void activate() {
        logger.fine("WizCardRootFile activated");
        getRootPane().setDefaultButton(cmdNext);
        fldRootDir.requestFocusInWindow();
        wizard.setProperty(Property.ROOT_FILE, null);
    }

    public void passivate() {
        logger.fine("WizCardRootFile passivated");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rootFileChooser = new javax.swing.JFileChooser();
        lblRootDir = new javax.swing.JLabel();
        cmdBrowse = new javax.swing.JButton();
        cmdNext = new javax.swing.JButton();
        fldRootDir = new javax.swing.JComboBox();

        rootFileChooser.setFileFilter(archiveFileFilter);
        rootFileChooser.setFileSelectionMode(javax.swing.JFileChooser.FILES_AND_DIRECTORIES);

        setName("ROOT"); // NOI18N

        lblRootDir.setText("<html><font style=\"font-size: 14pt; color:maroon; font-weight: bold\">1. Where to scan from</font>\n<br>\n<br>\nSelect a root directory or archive:\n</html>\n");

        cmdBrowse.setText("Browse...");
        cmdBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdBrowseActionPerformed(evt);
            }
        });

        cmdNext.setMnemonic('n');
        cmdNext.setText("Next >>");
        cmdNext.setEnabled(false);
        cmdNext.setMaximumSize(new java.awt.Dimension(98, 23));
        cmdNext.setMinimumSize(new java.awt.Dimension(98, 23));
        cmdNext.setName("default"); // NOI18N
        cmdNext.setPreferredSize(new java.awt.Dimension(98, 23));
        cmdNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdNextActionPerformed(evt);
            }
        });

        fldRootDir.setEditable(true);
        fldRootDir.setName("focus"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblRootDir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmdNext, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(fldRootDir, 0, 486, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmdBrowse)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblRootDir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmdBrowse)
                    .addComponent(fldRootDir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 225, Short.MAX_VALUE)
                .addComponent(cmdNext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cmdNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdNextActionPerformed
        try {
            File root = getRootForScan(String.valueOf(fldRootDir.getSelectedItem()));
            Util.updateComboList(fldRootDir);
            wizard.setProperty(Property.ROOT_FILE, root);
            wizard.nextPhase();
        } catch (InvalidFileException e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Invalid file", JOptionPane.ERROR_MESSAGE);
        }
}//GEN-LAST:event_cmdNextActionPerformed

    private void cmdBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdBrowseActionPerformed
        File tmp = Util.getFile(String.valueOf(fldRootDir.getSelectedItem()));
        if (tmp != null) {
            rootFileChooser.setCurrentDirectory(tmp);
        }
        if (rootFileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File rootFile = rootFileChooser.getSelectedFile();
            fldRootDir.setSelectedItem(rootFile.getAbsolutePath());
        }
}//GEN-LAST:event_cmdBrowseActionPerformed

    private File getRootForScan(String filename) throws InvalidFileException {
        File root = Util.getFile(filename);
        if (root == null) {
            throw new InvalidFileException("File does not exist: " + filename);
        }
        if (!root.isDirectory()) {
            try {
                JarFile tmp = new JarFile(root);
            } catch (ZipException ze) {
                throw new InvalidFileException("Not a valid archive file: " + root + "\n" + ze);
            } catch (IOException ie) {
                throw new InvalidFileException("Error opening archive: " + root + "\n" + ie);
            }
        }
        return root;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmdBrowse;
    private javax.swing.JButton cmdNext;
    private javax.swing.JComboBox fldRootDir;
    private javax.swing.JLabel lblRootDir;
    private javax.swing.JFileChooser rootFileChooser;
    // End of variables declaration//GEN-END:variables
}
